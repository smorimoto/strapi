"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5507],{1558:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=t(3117),o=(t(7294),t(3905));const a={title:"Configuration",tags:["pack-up","configuration","configs"]},i="Configuring pack-up",s={unversionedId:"docs/utils/pack-up/config",id:"docs/utils/pack-up/config",title:"Configuration",description:"By default, pack-up is designed to use the package.json as a source of truth to bundle your package.",source:"@site/docs/docs/05-utils/pack-up/02-config.mdx",sourceDirName:"docs/05-utils/pack-up",slug:"/docs/utils/pack-up/config",permalink:"/docs/utils/pack-up/config",draft:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/docs/05-utils/pack-up/02-config.mdx",tags:[{label:"pack-up",permalink:"/tags/pack-up"},{label:"configuration",permalink:"/tags/configuration"},{label:"configs",permalink:"/tags/configs"}],version:"current",sidebarPosition:2,frontMatter:{title:"Configuration",tags:["pack-up","configuration","configs"]},sidebar:"docs",previous:{title:"Watch",permalink:"/docs/utils/pack-up/commands/watch"},next:{title:"Templates",permalink:"/docs/utils/pack-up/templates"}},c={},u=[{value:"Usage",id:"usage",level:2},{value:"Interface",id:"interface",level:2}],p={toc:u};function l(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"configuring-pack-up"},"Configuring pack-up"),(0,o.kt)("p",null,"By default, ",(0,o.kt)("inlineCode",{parentName:"p"},"pack-up")," is designed to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json")," as a source of truth to bundle your package.\nThis creates a seemless alignment between the bundling & publishing process. However, if you require more\nflexibility, ",(0,o.kt)("inlineCode",{parentName:"p"},"pack-up")," also supports a configuration file \u2013 ",(0,o.kt)("inlineCode",{parentName:"p"},"packup.config.[mtj]s"),"."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n")),(0,o.kt)("h2",{id:"interface"},"Interface"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"interface Config {\n  /**\n   * An array of entry points to bundle. This is useful if you want to bundle something that should not\n   * be exported by the package, e.g. CLI scripts or Node.js workers.\n   */\n  bundles?: ConfigBundle[];\n  /**\n   * The directory to output the bundle to.\n   */\n  dist?: string;\n  /**\n   * A list of external dependencies to exclude from the bundle.\n   * We already collect the dependencies & peerDeps from the package.json.\n   */\n  externals?: string[];\n  /**\n   * Whether to minify the output or not.\n   */\n  minify?: boolean;\n  /**\n   * Whether to generate sourcemaps for the output or not.\n   */\n  sourcemap?: boolean;\n  /**\n   * The transpilation target of the bundle. This is useful if you're bundling many different CLIs or\n   * Node.js workers and you want them to be transpiled for the node environment.\n   */\n  runtime?: Runtime;\n}\n\ninterface ConfigBundle {\n  source: string;\n  import?: string;\n  require?: string;\n  runtime?: Runtime;\n}\n\ntype Runtime = '*' | 'node' | 'web';\n")))}l.isMDXComponent=!0},3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=u(t),d=o,g=f["".concat(c,".").concat(d)]||f[d]||l[d]||a;return t?r.createElement(g,i(i({ref:n},p),{},{components:t})):r.createElement(g,i({ref:n},p))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=f;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);